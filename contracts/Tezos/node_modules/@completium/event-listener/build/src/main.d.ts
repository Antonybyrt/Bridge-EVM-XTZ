import { BlockResponse } from '@taquito/rpc';
import { EventListenerOptions, Event, EventData, EventFilter, EventProcessor } from './types';
/**
 *
 * @param s source, address of the event emitter contract
 * @param c creator, event creator function (provided by binding generator)
 * @param p processor, your event processor
 * @description Registers an event definition in indexer
 *
 */
export declare function registerEvent<T extends Event>({ source, filter, process }: {
    source: string;
    filter: EventFilter;
    process: EventProcessor<T>;
}): void;
declare type ApplyProcessor<T extends Event> = {
    process: EventProcessor<T>;
    event: T;
    data: EventData;
};
/**
 *
 * @param block block response to process.
 * @description Processes block's internal operations
 *
 */
export declare function processBlock(block: BlockResponse): Array<ApplyProcessor<any>>;
/**
 *
 * @param options indexer options
 * @description Starts the event indexer
 *
 */
export declare function run_listener(options?: EventListenerOptions): Promise<void>;
export declare function stop_listener(): void;
export {};
//# sourceMappingURL=main.d.ts.map